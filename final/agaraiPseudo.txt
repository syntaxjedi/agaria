initialize minDamage to 0
initialize maxDamage to 0
initialize damageMod to 0
initialize crit to 0
initialize critChance to 0
initialize speed to 0
initialize selected
initialize totalDamage to 0
initialize eHit to 0
initialize critRN to Math.roundDown(critChance * 100)
initialize health to 0
initialize enemHealthMax to 0
initialize enemHealth to 0
initialize enemMinDamage to 0
initialize enemMaxDamag to 0
initialize enemDamageDone to 0
initialize name to ""

initialize outputDamage to elementID "diceRoll"
initialize outputCrit to elementID "critRoll"
initialize outputTotal to elementID "totalDamage"
initialize outputExtra to elementID "extraHit"
initialize swords to elementID "swords"
initialize buttonView to elementID "choose"
initialize confirmView to elementID "confirm"
initialize stats to elementID "stats"
initialize enemy to elementID "enemy"
initialize enemChoose to elementID "cEnem"
initialize healthBar to elementID "health"
initialize enemHealthBar to elementID "enemyHealth"

display swords as "none"
display buttonView as "none"
display enemChoose as "none"
display confirmView as "none"
get elementID "enemyWhole" and display as "none"
get elementID "chooseEnemy" and display as "none"

function showSwords(){
  display swords as "block"
  display buttonView as "block"
  get elementID "start" and display as "block"
  initialize name as prompt "What is your name warrior"
  get elementID "name" and display innerHTML as name
}

function dagger(){
  for(initialize i to 0; i is less than swords(total length); i add one){
    if(i equals 1 or i equals 0){
      swords[at position i] display as "block"
    }else{
      swords[at position i] display as "none"
    }
  }
  display confirmview as "none"
  display enemChoose as "block"

  set minDamage to 2
  set maxDamage to 6
  set crit to 6
  set critChance to 0.05
  set speed to 3
  set selected to dagger

  display stats innerHTML as ("Damage: " + minDamage + " - " + maxDamage + "<line break>" +
  "Critical Damage: " + crit + "<line break>" +
  "Critical Damage Chance: " + (critChance * 100) + "<line break>" +
  "Swift +" + speed);
}

function short(){
  for(initialize i to 0; i is less than swords(total length); i add one){
    if(i equals 2 or i equals 0){
      swords[at position i] display as "block"
    }else{
      swords[at position i] display as "none"
    }
  }

  display confirmView as "none"
  display enemChoose as "block"

  set minDamge to 5
  set maxDamage to 7
  set crit to 7
  set critChance to 0.03
  set speed to 2
  set selected to "short"

  display stats innerHTML as ("Damage: " + minDamage + " - " + maxDamage + "<line break>" +
  "Critical Damage: " + crit + "<line break>" +
  "Critical Damage Chance: " + critChance + "<line break>" +
  "Triple Strike +" + speed);
}

function long(){
  for(initialize i to 0; i is less than swords(total length); i add one){
    if(i equals 3 or i equals 0){
      swords[at position i] display as "block"
    }else{
      swords[at position i] display as "none"
    }
  }

  display confirmView as "none"
  display enemChoose as "block"

  set minDamage to 7
  set maxDamage to 11
  set crit to 10
  set critChance to 0.03
  set speed to 2
  set selected to "long"

  display stats innerHTML as ("Damage: " + minDamage + " - " + maxDamage + "<line break>" +
  "Critical Damage: " + crit + "<line break>" +
  "Critical Damage Chance: " + critChance + "<line break>" +
  "Lucky Strike +" + speed);
}

function broad(){
  for(initialize i to 0; i is less than swords(total length); i add one){
    if(i equals 4 or i equals 0){
      swords[at position i] display as "block"
    }else{
      swords[at position i] display as "none"
    }
  }
  display confirmView as "none"
  display enemChoose as "none"

  set minDamage to 13
  set maxDamage to 16
  set crit to 12
  set critChance to 0.01
  set speed to 1
  set selected to "broad"

  display stats innerHTML as ("Damage: " + minDamage + " - " + maxDamage + "<br>" +
  "Critical Damage: " + crit + "<br>" +
  "Critical Damage Chance: " + critChance + "<br>" +
  "Back Swing +" + speed);
}

function confirm(){
  display confirmView as "none"
  display buttonView as "none"
  display stats as "none"
  get elementID "chooseEnemey" and display as "none"

  for(initialize i to 0; i is less than swords(total length); i plus one){
    if(swords[at position i] display equals "block" or i equals 0){
      swords[at position i] equals "block"
    }else{
      swords[at position i] equals "none"
    }
  }
  goTo fight()
}

function chooseEnem(){
  get elementID "enemyWhole" and display as "block"
  get elementID "chooseEnemey" and display as "block"
  get elementID "confirm" and display as "none"
  display buttonView as "none"
  display enemChoose as "none"
  display stats as "none"
}

function enem1(){
  for(initialize i to 0; i is less than enem(total length); i plus 1){
    if(i equals 1 or i equals 0){
      display enemey[at position i] as "block"
      set enemHealthMax to 200
      set enemHealth to enemHealthMax
      set enemMinDamage to 10
      set enemMinDamage to 15
    }else{
      display enemy[at position i] as "none"
    }
  }
  display confirmVew as "block"
  display enemChoose as "none"
}

function enem2(){
  for(initialize i to 0; i is less than enem(total length); i plus 1){
    if(i equals 2 or i equals 0){
      display enemy[at [position i] as "block"
      set enemHealthMax to 250
      set enemHealth to enemHealthMax
      set enemMinDamage to 12
      set enemMaxDamage to 17
    }else{
      display enemy[at position i] as "none"
    }
    display confirmView as "block"
    display enemChoose as "none"
  }
}

function enem3(){
  for(initialize i to 0; i is less than enem(total length); i plus 1){
    if(i equals 3 or i equals 0){
      display enemy[at [position i] as "block"
      set enemHealthMax to 150
      set enemHealth to enemHealthMax
      set enemMinDamage to 10
      set enemMaxDamage to 13
    }else{
      display enemy[at position i] as "none"
    }
    display confirmView as "block"
    display enemChoose as "none"
  }
}

function fight(){
  initialize isCrit to 0
  initialize damageDone to 0
  initialize damageDoneExtra to 0

  display outputDamage as "block"
  display outputCrit to "block"
  display outputTotal to "none"

  setTimeout(function() {
    damageDone equals Math.roundDown(Math.random() * maxDamage)+minDamage
    isCrit equals Math.roundDown(Math.random()*20)+1
    extraHit equals Math.roundDown(Math.random()*20)
    enemDamageDone equals Math.roundDown(Math.random()*enemMaxDamage)+enemMinDamage

    health equals health minus enemDamageDone
    display healthBar innerHTML as ("Health: " + health + "/100")
    display healthBar innerHTML as ("Enemy Health: " + enemHealth + "/" enemHealthMax)

    if(extraHit is less than or equal to speed){
      for (initialize i to 0; i is less than extraHit; i plus 1){
        damageDoneExtra equals Math.roundDown(Math.random()*maxDamage)+minDamage
        damageDone = damageDone + damageDoneExtra
        eHit plus 1
      }
    }
    if(isCrit is less than or equal to critRN){
      display outputDamage innerHTML as ("Critical Hit! " + crit)
      display outpurCrit innerHTML as ("Crit Roll: " + isCrit)
      display outputExtra innerHTML as ("Extra Hit: " + extraHit)
    }else{
      display outputDamage innerHTML as ("Damage: " + damageDone)
      display outputCrit innerHTML as ("Crit Roll: " + isCrit)
      display outputExtra innerHTML as ("Extra Hit: " + extraHit)
    }
    set enemHealth to enemHealth minus damageDone
    set totalDamage to totalDamage plus damageDone
    if(health is less than or equal to 0){
      health equals 0
    }
    if(health is greater than 0 and enemHealth is greater than 0){
      goTo fight()
    }else{
      display outputDamage as "none"
      display outputCrit as "none"
      display outputTotal as "block"
      display outputTotal innerHTML as ("Total Damage: " + totalDamage)
      totalDamage equals 0
    }
  }, 1500)

}
